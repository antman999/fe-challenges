/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as MediumTodolistImport } from './routes/medium/todolist'
import { Route as MediumSlideshowImport } from './routes/medium/slideshow'
import { Route as HardTictactoeImport } from './routes/hard/tictactoe'
import { Route as EasyFlightbookerImport } from './routes/easy/flightbooker'
import { Route as EasyAccordionImport } from './routes/easy/accordion'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MediumTodolistRoute = MediumTodolistImport.update({
  id: '/medium/todolist',
  path: '/medium/todolist',
  getParentRoute: () => rootRoute,
} as any)

const MediumSlideshowRoute = MediumSlideshowImport.update({
  id: '/medium/slideshow',
  path: '/medium/slideshow',
  getParentRoute: () => rootRoute,
} as any)

const HardTictactoeRoute = HardTictactoeImport.update({
  id: '/hard/tictactoe',
  path: '/hard/tictactoe',
  getParentRoute: () => rootRoute,
} as any)

const EasyFlightbookerRoute = EasyFlightbookerImport.update({
  id: '/easy/flightbooker',
  path: '/easy/flightbooker',
  getParentRoute: () => rootRoute,
} as any)

const EasyAccordionRoute = EasyAccordionImport.update({
  id: '/easy/accordion',
  path: '/easy/accordion',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/easy/accordion': {
      id: '/easy/accordion'
      path: '/easy/accordion'
      fullPath: '/easy/accordion'
      preLoaderRoute: typeof EasyAccordionImport
      parentRoute: typeof rootRoute
    }
    '/easy/flightbooker': {
      id: '/easy/flightbooker'
      path: '/easy/flightbooker'
      fullPath: '/easy/flightbooker'
      preLoaderRoute: typeof EasyFlightbookerImport
      parentRoute: typeof rootRoute
    }
    '/hard/tictactoe': {
      id: '/hard/tictactoe'
      path: '/hard/tictactoe'
      fullPath: '/hard/tictactoe'
      preLoaderRoute: typeof HardTictactoeImport
      parentRoute: typeof rootRoute
    }
    '/medium/slideshow': {
      id: '/medium/slideshow'
      path: '/medium/slideshow'
      fullPath: '/medium/slideshow'
      preLoaderRoute: typeof MediumSlideshowImport
      parentRoute: typeof rootRoute
    }
    '/medium/todolist': {
      id: '/medium/todolist'
      path: '/medium/todolist'
      fullPath: '/medium/todolist'
      preLoaderRoute: typeof MediumTodolistImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/easy/accordion': typeof EasyAccordionRoute
  '/easy/flightbooker': typeof EasyFlightbookerRoute
  '/hard/tictactoe': typeof HardTictactoeRoute
  '/medium/slideshow': typeof MediumSlideshowRoute
  '/medium/todolist': typeof MediumTodolistRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/easy/accordion': typeof EasyAccordionRoute
  '/easy/flightbooker': typeof EasyFlightbookerRoute
  '/hard/tictactoe': typeof HardTictactoeRoute
  '/medium/slideshow': typeof MediumSlideshowRoute
  '/medium/todolist': typeof MediumTodolistRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/easy/accordion': typeof EasyAccordionRoute
  '/easy/flightbooker': typeof EasyFlightbookerRoute
  '/hard/tictactoe': typeof HardTictactoeRoute
  '/medium/slideshow': typeof MediumSlideshowRoute
  '/medium/todolist': typeof MediumTodolistRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/easy/accordion'
    | '/easy/flightbooker'
    | '/hard/tictactoe'
    | '/medium/slideshow'
    | '/medium/todolist'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/easy/accordion'
    | '/easy/flightbooker'
    | '/hard/tictactoe'
    | '/medium/slideshow'
    | '/medium/todolist'
  id:
    | '__root__'
    | '/'
    | '/easy/accordion'
    | '/easy/flightbooker'
    | '/hard/tictactoe'
    | '/medium/slideshow'
    | '/medium/todolist'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EasyAccordionRoute: typeof EasyAccordionRoute
  EasyFlightbookerRoute: typeof EasyFlightbookerRoute
  HardTictactoeRoute: typeof HardTictactoeRoute
  MediumSlideshowRoute: typeof MediumSlideshowRoute
  MediumTodolistRoute: typeof MediumTodolistRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EasyAccordionRoute: EasyAccordionRoute,
  EasyFlightbookerRoute: EasyFlightbookerRoute,
  HardTictactoeRoute: HardTictactoeRoute,
  MediumSlideshowRoute: MediumSlideshowRoute,
  MediumTodolistRoute: MediumTodolistRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/easy/accordion",
        "/easy/flightbooker",
        "/hard/tictactoe",
        "/medium/slideshow",
        "/medium/todolist"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/easy/accordion": {
      "filePath": "easy/accordion.tsx"
    },
    "/easy/flightbooker": {
      "filePath": "easy/flightbooker.tsx"
    },
    "/hard/tictactoe": {
      "filePath": "hard/tictactoe.tsx"
    },
    "/medium/slideshow": {
      "filePath": "medium/slideshow.tsx"
    },
    "/medium/todolist": {
      "filePath": "medium/todolist.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
